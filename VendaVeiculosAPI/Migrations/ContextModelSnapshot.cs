// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendaVeiculosAPI.Repositories;

#nullable disable

namespace VendaVeiculosAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VendaVeiculosAPI.Models.Arquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDelete");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("NomeArquivo");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Arquivo");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("TipoArquivo");

                    b.HasKey("Id");

                    b.ToTable("TB_ARQUIVO");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("Ano");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDelete");

                    b.Property<string>("Foto")
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("Foto");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("Modelo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("Nome");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("Preco");

                    b.Property<string>("Quilometragem")
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("Quilometragem");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCriacaoId");

                    b.ToTable("TB_CARRO");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.CarroArquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("ArquivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<Guid>("CarroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDelete");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.HasIndex("CarroId");

                    b.ToTable("TB_CARRO_ARQUIVO");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDelete");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("Senha");

                    b.Property<int>("TipoUser")
                        .HasColumnType("int")
                        .HasColumnName("TipoUsuario");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.UsuarioArquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("ArquivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDelete");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("USUARIO_ARQUIVO");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.Car", b =>
                {
                    b.HasOne("VendaVeiculosAPI.Models.Usuario", "IDUsuarioCreate")
                        .WithMany()
                        .HasForeignKey("UsuarioCriacaoId");

                    b.Navigation("IDUsuarioCreate");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.CarroArquivo", b =>
                {
                    b.HasOne("VendaVeiculosAPI.Models.Arquivo", "Arquivo")
                        .WithMany()
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VendaVeiculosAPI.Models.Car", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arquivo");

                    b.Navigation("Carro");
                });

            modelBuilder.Entity("VendaVeiculosAPI.Models.UsuarioArquivo", b =>
                {
                    b.HasOne("VendaVeiculosAPI.Models.Arquivo", "Arquivo")
                        .WithMany()
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VendaVeiculosAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arquivo");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
